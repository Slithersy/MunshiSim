#include "helpers/helper_font.hps"
#include "helpers/helper_custom.hps"

//-------------------------------------------------------

//////////////////////////////////////////////////////
// CELLPHONE
//////////////////////////////////////////////////////

//-------------------------------------------------------

enum eCellPhoneGuiState
{
	eCellPhoneGuiState_Idle=0,
	eCellPhoneGuiState_Ringing,
	eCellPhoneGuiState_CallInProgress,
	eCellPhoneGuiState_MissedCall,
	eCellPhoneGuiState_Rejected,
	eCellPhoneGuiState_DecideToCall,
	eCellPhoneGuiState_Calling,
	eCellPhoneGuiState_CancelledCall
}

enum eCellPhoneGuiAction
{
	eCellPhoneGuiAction_None=0,
	eCellPhoneGuiAction_HungUp,
	eCellPhoneGuiAction_Answered,
	eCellPhoneGuiAction_MissedCall,
	eCellPhoneGuiAction_RejectedCall,
	eCellPhoneGuiAction_Called,
	eCellPhoneGuiAction_CancelledCall
}

//-------------------------------------------------------

int CellPhoneGui_GetState()
{
	return ImGui_GetStateInt("CallState");
}

//-------------------------------------------------------

// Translation string under 'Phone' to use as time
void CellPhoneGui_SetClockString(const tString& in asName)
{
    if (asName.length()>0) {
        array<tString> vSplitTime = cString_Split(asName, ":");
        if (vSplitTime.size()<=1) vSplitTime = cString_Split(cString_FullyTranslate("Phone", asName), ":");
        int lHour = cString_ToInt(vSplitTime[0], 0);
        int lMinutes = cString_ToInt(vSplitTime[1], 0);
        Entity_SetVarString(ImGui_GetName(), "ClockString", ""+(((lHour*60 + lMinutes)*60)-5));
        
        if (ImGui_GetStateFloat("ClockFloatTime",0)==0) {
            ImGui_FadeStateFloat("ClockFloatTime", 10800, 10800, eEasing_Linear);
        }
    }
}

//-------------------------------------------------------

// Icon set to use for reception icons
// A = 3 bars
// B = 2 bars
void CellPhoneGui_SetReceptionIcons(const tString& in asName)
{
	Entity_SetVarString(ImGui_GetName(), "ReceptionIcons", asName);
}

//-------------------------------------------------------

// Will use translation string "Caller_"+asCallerID
// and avatar image "smartphone_avatar_"+asCallerID
void CellPhoneGui_StartRinging(const tString& in asCallerID, float afTimeOut=0)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_Ringing);	// Ringing
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
	if (afTimeOut!=0)
		ImGui_AddTimer("PhoneTimeout", afTimeOut);
}

//-------------------------------------------------------

// Will use translation string "Caller_"+asCallerID
// and avatar image "smartphone_avatar_"+asCallerID
void CellPhoneGui_DecideToCall(const tString& in asCallerID)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_DecideToCall);
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
}

//-------------------------------------------------------

float mfCallTimePause = 0;
float mfCallDeletion = 0;
float mfClockTimePause = 0;
float mfClockTimeDeletion = 0;
bool mbCalledPaused = false;
// Will use translation string "Caller_"+asCallerID
// and avatar image "smartphone_avatar_"+asCallerID
void CellPhoneGui_PickUp(const tString& in asCallerID)
{
    mfCallTimePause = 0;
    mfCallDeletion = ImGui_GetStateFloat("CallTime",0);
    mbCalledPaused = false;
    ImGui_StopFade("CallTime");
    
	// Start call time
	ImGui_FadeStateFloat("CallTime", 10800, 10800, eEasing_Linear);
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_CallInProgress);	// Call in progress
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
	Sound_CreateAtEntity("PhoneBeep", "00_01_subway/SFX/phone_beep_action", "Player");
	ImGui_StopTimer("PhoneTimeout");
}

//-------------------------------------------------------

void CellPhoneGui_HangUp()
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_Idle);
	Sound_CreateAtEntity("PhoneBeep", "00_01_subway/SFX/phone_beep_action", "Player");
}

//-------------------------------------------------------

void CellPhoneGui_RejectCall(const tString& in asCallerID)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_Rejected);
	Sound_CreateAtEntity("PhoneBeep", "00_01_subway/SFX/phone_beep_action", "Player");
}

//-------------------------------------------------------

void CellPhoneGui_MissedCall(const tString& in asCallerID)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_MissedCall);
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
}

//-------------------------------------------------------

void CellPhoneGui_CancelledCall(const tString& in asCallerID)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_CancelledCall);
	Sound_CreateAtEntity("PhoneBeep", "00_01_subway/SFX/phone_beep_action", "Player");
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
}

//-------------------------------------------------------

void CellPhoneGui_Calling(const tString& in asCallerID)
{
	ImGui_SetStateInt("CallState", eCellPhoneGuiState_Calling);
	Sound_CreateAtEntity("PhoneBeep", "00_01_subway/SFX/phone_beep_action", "Player");
	Entity_SetVarString(ImGui_GetName(), "CallerID", asCallerID);
}

//-------------------------------------------------------

float mfImageAngle = 25;
eCellPhoneGuiAction CellPhoneGui_Update()
{
	float fCallTime = ImGui_GetStateFloat("CallTime",0);
    float fClockFloat = cString_ToInt(Entity_GetVarString(ImGui_GetName(), "ClockString"), 0) + ImGui_GetStateFloat("ClockFloatTime",0);
	int lState = ImGui_GetStateInt("CallState",0);
	tString sReceptionIcons = Entity_GetVarString(ImGui_GetName(), "ReceptionIcons");
    
    
    if (GetSimGamePaused()) {
        if (mbCalledPaused==false) {
            mfCallTimePause = fCallTime - mfCallDeletion;
            mfClockTimePause = fClockFloat - mfClockTimeDeletion;
            mbCalledPaused = true;
        }
        mfCallDeletion = fCallTime - mfCallTimePause;
        mfClockTimeDeletion = fClockFloat - mfClockTimePause;
        fCallTime = mfCallTimePause;
        fClockFloat = mfClockTimePause;
    } else {
        fCallTime = fCallTime - mfCallDeletion;
        fClockFloat = fClockFloat - mfClockTimeDeletion;
        mfImageAngle = ImGui_FadeOscillateFloat("CallProgressIcon",25,35,1.0f);
        mbCalledPaused = false;
    }

	ImGui_SetTransCategory("Phone");
	
	// Background		
	ImGui_DoImage(cImGuiGfx("smartphone_backdrop"), 0, ImGui_NrmSize(1));
	
	// Power/signal icons
	ImGui_DoImageCorrectAspect(cImGuiGfx("smartphone_icons"+sReceptionIcons), ImGui_NrmPos(0.02, -0.03, 1), ImGui_NrmSize(0.2, 0.1));
	
	// Clock
	cImGuiLabelData label = ImGui_GetDefaultLabel();
	label.mFont.SetFile(Helper_Font_GetFontName(eLuxFontType_Sansation_Medium_Bold));
	label.mFontAlign = eFontAlign_Right;
	label.mFont.mvSize = ImGui_NrmSizeKeepRatio(0.035);
    ImGui_SetTransCategory("");
	ImGui_DoLabelExt(String_SecondsToClockDisplay(fClockFloat, true, true, false, false), label, ImGui_NrmPos(0, 0, 1), ImGui_NrmSize(0.97, -1));
    ImGui_SetTransCategory("Phone");
	
	tString sCallerID = Entity_GetVarString(ImGui_GetName(), "CallerID");
	
	//////////////
    // Image
	if (lState!=eCellPhoneGuiState_Idle)
	{
		// Image
		ImGui_DoImageCorrectAspect(cImGuiGfx("smartphone_avatar_"+sCallerID), ImGui_NrmPosGroup(0.2, 0.05, 1), ImGui_NrmSizeGroup(0.6, 0.5));
		
		// Caller ID
		label.mFontAlign = eFontAlign_Center;
		label.mFont.mvSize = ImGui_NrmSizeKeepRatio(0.06f);
		ImGui_DoLabelExt("Caller_"+sCallerID, label, ImGui_NrmPos(0, 0.5, 1), ImGui_NrmSize(1, -1));
	}
	
	if (lState==eCellPhoneGuiState_Idle)
	{
		// Flip you HPL3.. this only works if you render invisible text here, otherwise it breaks all IMGUI text.
		// Duration
		ImGui_SetTransCategory("");
	}
	else if (lState==eCellPhoneGuiState_Ringing)
	{
		// Answer
		cImGuiButtonData answerButton;
		answerButton.mbUseBackgroundGfx = true;
		answerButton.mbUseInFocusColor = true;
		answerButton.mGfxBackground = cImGuiGfx("smartphone_icon_answer");
		answerButton.mColorBase = cColor(0.35f,1);
		answerButton.mColorInFocus = cColor(ImGui_FadeOscillateFloat("ButtonAnswerFocusColor", 0.5, 1.5, 0.75f, eEasing_QuadInOut));
				
		// Ignore
		cImGuiButtonData ignoreButton = answerButton;
		ignoreButton.mGfxBackground = cImGuiGfx("smartphone_icon_ignore");
		
		if (ImGui_DoButtonExt("AnswerButton", "", answerButton, ImGui_NrmPosGroup(0.05, 0.6, 1), ImGui_NrmSizeGroup(0.45, 0.175)))
		{
			// Answered
			CellPhoneGui_PickUp(sCallerID);
			return eCellPhoneGuiAction_Answered;
		}
		if (ImGui_DoButtonExt("IgnoreButton", "", ignoreButton, ImGui_NrmPosGroup(0.525, 0.6, 1), ImGui_NrmSizeGroup(0.45, 0.175)))
		{
			// Hung up
			CellPhoneGui_RejectCall(sCallerID);
			return eCellPhoneGuiAction_RejectedCall;
		}
			
		if(ImGui_BecameInFocus())
		{
			ImGui_SetFocus("AnswerButton");
		}
		
		if(ImGui_TimerOver("PhoneTimeout"))
		{
			CellPhoneGui_MissedCall(sCallerID);
			return eCellPhoneGuiAction_MissedCall;
		}
	}
	else if (lState==eCellPhoneGuiState_CallInProgress)
	{
		// Call in Progress icon
		ImGui_SetModRotateAngle(mfImageAngle);
		ImGui_DoImageCorrectAspect(cImGuiGfx("smartphone_calling"), ImGui_NrmPos(0.3,0.55,1), ImGui_NrmSize(0.4,0.3));
		ImGui_SetModRotateAngle(0);

		// Duration
		label.mFontAlign = eFontAlign_Center;
		label.mFont.mvSize = ImGui_NrmSizeKeepRatio(0.03);
		ImGui_DoLabelExt("DurationHeader", label, ImGui_NrmPos(0, 0.8, 1), ImGui_NrmSize(1, -1));
		label.mFont.mvSize = ImGui_NrmSizeKeepRatio(0.07);
		ImGui_SetTransCategory("");
		ImGui_DoLabelExt(String_SecondsToClockDisplay(fCallTime, true, true, true, false), label, ImGui_NrmPosGroup(0, 0.83, 1), ImGui_NrmSizeGroup(1, -1));
	}
	else if (lState==eCellPhoneGuiState_MissedCall)
	{
		// Missed Call
		CellphoneGui_StatusText("MissedCall");
	}
	else if (lState==eCellPhoneGuiState_Rejected)
	{
		// Rejected Call
		CellphoneGui_StatusText("RejectedCall");
	}
	else if (lState==eCellPhoneGuiState_DecideToCall)
	{
		// Call
		cImGuiButtonData callButton;
		callButton.mbUseBackgroundGfx = true;
		callButton.mbUseInFocusColor = true;
		callButton.mGfxBackground = cImGuiGfx("smartphone_icon_call");
		callButton.mColorBase = cColor(0.35f,1);
		callButton.mColorInFocus = cColor(ImGui_FadeOscillateFloat("ButtonAnswerFocusColor", 0.5, 1.5, 0.75f, eEasing_QuadInOut));
				
		// Cancel
		cImGuiButtonData cancelButton = callButton;
		cancelButton.mGfxBackground = cImGuiGfx("smartphone_icon_cancel");
		
		if (ImGui_DoButtonExt("CallButton", "", callButton, ImGui_NrmPosGroup(0.05, 0.6, 1), ImGui_NrmSizeGroup(0.45, 0.175)))
		{
			// Called
			CellPhoneGui_Calling(sCallerID);
			return eCellPhoneGuiAction_Called;
		}
		if (ImGui_DoButtonExt("CancelButton", "", cancelButton, ImGui_NrmPosGroup(0.525, 0.6, 1), ImGui_NrmSizeGroup(0.45, 0.175)))
		{
			// Cancelled
			CellPhoneGui_CancelledCall(sCallerID);
			return eCellPhoneGuiAction_CancelledCall;
		}
			
		if(ImGui_BecameInFocus())
		{
			ImGui_SetFocus("CallButton");
		}
	}
	else if (lState==eCellPhoneGuiState_CancelledCall)
	{
		// Cancelled Call
		CellphoneGui_StatusText("CancelledCall");
	}	
	else if (lState==eCellPhoneGuiState_Calling)
	{
		// Calling
		CellphoneGui_StatusText("Calling");
	}
	
	return eCellPhoneGuiAction_None;
}

//-------------------------------------------------------

void CellphoneGui_StatusText(const tString &in asText)
{
	cImGuiTextFrameData textFrame = ImGui_GetDefaultTextFrame();
	textFrame.mbUseBackgroundGfx = false;
	textFrame.mFont.SetFile(Helper_Font_GetFontName(eLuxFontType_Sansation_Medium_Bold));
	textFrame.mFontAlign = eFontAlign_Center;
	textFrame.mFont.mvSize = ImGui_NrmSizeKeepRatio(0.08);
	
	ImGui_DoTextFrameExt(asText, 0, 0, 0, textFrame, ImGui_NrmPos(0.05, 0.7, 1), ImGui_NrmSize(0.9, 0.3));
}

//-------------------------------------------------------

void CellphoneGui_Preload()
{
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_icon_ignore.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_iconsA.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_iconsB.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_avatar_jesse.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_avatar_munshi.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_avatar_unknown.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_backdrop.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_calling.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_icon_answer.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_icon_call.tga");
	ImGui_PreloadImage("urban/graphics_smartphone/smartphone_icon_cancel.tga");
}